import { StateTree, StoreWithState } from './types';
interface DevtoolHook {
    on(event: string, callback: (targetState: Record<string, StateTree>) => void): void;
    emit(event: string, ...payload: any[]): void;
}
declare global {
    interface Window {
        __VUE_DEVTOOLS_GLOBAL_HOOK__?: DevtoolHook;
    }
    namespace NodeJS {
        interface Global {
            __VUE_DEVTOOLS_GLOBAL_HOOK__?: DevtoolHook;
        }
    }
}
export declare function useStoreDevtools(store: StoreWithState<string, StateTree>, stateDescriptor: {
    get: () => StateTree;
    set: (newValue: StateTree) => void;
}): void;
export {};
//# sourceMappingURL=devtools.d.ts.map